services:
  test:
    build: ./test
    container_name: test-school-secretary-test
    command: sh -c "npm run test"
    env_file:
      - .env.base
      - .env.prod
      - .env.local
    depends_on:
      proxy:
        condition: service_healthy
      app:
        condition: service_healthy
      api:
        condition: service_healthy
      db:
        condition: service_healthy
    networks:
      - public

  proxy:
    build: ./proxy
    container_name: test-school-secretary-proxy
    ports:
      - 8080:80
    volumes:
      - test_api_static:/vol/web/static/
      - test_api_media:/vol/web/media/
    depends_on:
      - api
      - app
    networks:
      - public
    healthcheck:
      test: [CMD-SHELL, "wget -q --spider http://127.0.0.1 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  app:
    image: node:22.18.0-alpine
    container_name: test-school-secretary-app
    working_dir: /app
    command: sh -c "npm ci && npm run build && npm run dev"
    volumes:
      - ./app:/app
      - test_app_node_modules:/app/node_modules
    environment:
      - NODE_ENV=test
    env_file:
      - .env.base
      - .env.prod
      - .env.local
    depends_on:
      - api
    networks:
      - public
    restart: unless-stopped
    healthcheck:
      test: [CMD-SHELL, "wget -q --spider http://localhost:3000 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  api:
    build: ./api
    container_name: test-school-secretary-api
    command: sh -c "python manage.py collectstatic --noinput && \
      python manage.py makemigrations && \
      python manage.py migrate && \
      gunicorn School-Secretary.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - test_api_static:/vol/web/static/
      - test_api_media:/vol/web/media/
    develop:
      watch:
        - action: sync
          path: ./app
          target: /app
    env_file:
      - .env.base
      - .env.prod
      - .env.local
    depends_on:
      - db
    networks:
      - public
      - private
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "python /api/healthcheck.py"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s

  db:
    image: postgres:16-alpine
    container_name: test-school-secretary-db
    volumes:
      - test_db_data:/var/lib/postgresql/data/
    env_file:
      - .env.base
      - .env.prod
      - .env.local
    networks:
      - private
    restart: unless-stopped
    healthcheck:
      test: [CMD-SHELL, "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 20s

networks:
  public:
    driver: bridge
  private:
    driver: bridge

volumes:
  test_db_data:
  test_api_static:
  test_api_media:
  test_app_node_modules:
