services:
  test:
    build: ./test
    container_name: test-school-secretary-test
    command: sh -c "npm run test"
    env_file:
      - .env.base
      - .env.prod
      - .env.local
    depends_on:
      proxy:
        condition: service_started
      app:
        condition: service_started
      api:
        condition: service_started
      db:
        condition: service_started
    networks:
      - public

  proxy:
    build: ./proxy
    container_name: test-school-secretary-proxy
    ports:
      - "8080:80"
    volumes:
      - test_api_static:/vol/web/static/
      - test_api_media:/vol/web/media/
    depends_on:
      - api
      - app
    networks:
      - public

  app:
    build: ./app
    container_name: test-school-secretary-app
    command: sh -c "npm install &&\
      npm run dev"
    volumes:
      - ./app:/app
    environment:
      - NODE_ENV=test
    env_file:
      - .env.base
      - .env.prod
      - .env.local
    depends_on:
      - api
    develop:
      watch:
        - action: sync
          path: ./app
          target: /app
    networks:
      - public
    restart: unless-stopped

  api:
    build: ./api
    container_name: test-school-secretary-api
    command: sh -c "python manage.py collectstatic --noinput &&\
      python manage.py makemigrations &&\
      python manage.py migrate &&\
      gunicorn School-Secretary.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - test_api_static:/vol/web/static/
      - test_api_media:/vol/web/media/
    develop:
      watch:
        - action: sync
          path: ./app
          target: /app
    env_file:
      - .env.base
      - .env.prod
      - .env.local
    depends_on:
      - db
    networks:
      - public
      - private
    restart: unless-stopped

  db:
    image: postgres:16-alpine
    container_name: test-school-secretary-db
    volumes:
      - test_db_data:/var/lib/postgresql/data/
    env_file:
      - .env.base
      - .env.prod
      - .env.local
    networks:
      - private
    restart: unless-stopped

networks:
  public:
    driver: bridge
  private:
    driver: bridge

volumes:
  test_db_data:
  test_api_static:
  test_api_media:
